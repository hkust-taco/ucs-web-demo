abstract class Option[A]: Some[A] | None
class Some[A](value: A) extends Option[A]
module None extends Option

abstract class Either[out A, out B]: Left[A] | Right[B]
class Left[A](leftValue: A) extends Either[A, nothing]
class Right[B](rightValue: B) extends Either[nothing, B]


fun classify(n) = if n
  > 0 and n % 2 ==
    0 then Some(Right(n))
    else Some(Left(n))
  else None

fun test(x) = if classify(x) is
  Some(x) and x is
    Left(_)  then "left-defined"
    Right(_) then "right-defined"
  None       then "undefined"
